{"version":3,"sources":["context/Context.js","components/main_components/Form.js","components/Loader.js","components/main_components/Grid.js","components/Main.js","components/Details.js","theme/Variables.js","components/main_components/Header.js","App.js","theme/Reset.js","index.js"],"names":["Context","createContext","Section","styled","section","InputsForm","form","Input","input","theme","darkMode","elementsColor","textColor","InputsDropdownContainer","div","SvgStyles","position","left","Select","select","Form","useContext","countries","setFilteredCountries","useState","search","setSearch","filter","setFilter","useEffect","name","toLowerCase","includes","region","style","xmlns","className","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","type","value","onChange","e","currentTarget","placeholder","default","Wrapper","Loader","Main","main","props","backgroundColor","CountryTemplate","ImageWrapper","CountryInfo","linkStyles","textDecoration","Grid","numberWithCommas","setCountries","filteredCountries","loader","setLoader","fetchData","a","fetch","response","json","console","log","map","index","population","capital","flag","to","key","src","alt","x","toString","replace","BackButtonContainer","svgStyles","top","bottom","transform","ContentWrapper","FlagWrapper","DetailsWrapper","AContainer","ul","BContainer","CContainer","Details","match","countryDetails","setCountryDetails","params","data","nativeName","subregion","alpha2Code","currencies","languages","borders","element","Variables","lightMode","inputColor","Header","header","Header__title_container","Header__switch_container","MainHeader","App","Provider","exact","path","component","Reset","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebcf2929.chunk.js","sourcesContent":["import { createContext } from 'react'\r\nexport const Context = createContext();\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Context } from '../../context/Context';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section`\r\n    width: 100%;\r\n    height: 140px;\r\n    display: grid;\r\n    align-items: center;\r\n\tgrid-template-columns: repeat(2, 1fr);\r\n\r\n\t@media (max-width: 720px) {\r\n\t\tgrid-template-rows: repeat(2, 1fr);\r\n\t\tmargin: 20px 0;\r\n\t}\r\n`;\r\n\r\n\r\nconst InputsForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 70%;  \r\n    height: 100%;\r\n    justify-content: flex-start;\r\n    margin-left: 50px;\r\n    position: relative;\r\n\tgrid-column: 1 / 2;\r\n\r\n\t@media (max-width: 720px) {\r\n\t\tgrid-row: 1 / 2;\r\n\t}\r\n`;\r\n\r\nconst Input = styled.input`\r\n\tborder: none;\r\n\theight: 43px;\r\n    padding: 12px;\r\n    width: 400px;\r\n    background-color: ${({ theme: { darkMode: { elementsColor } } }) => elementsColor};\r\n    border-radius: 5px;\r\n    color: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n    font-size: 15px;\r\n    padding-left: 50px;\r\n\r\n\t::placeholder { \r\n\t\tcolor: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n\t}\r\n\t@media (max-width: 400px) {\r\n\t\twidth: 330px;\r\n\t}\r\n`;\r\n\r\nconst InputsDropdownContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    width: 91.5%;  \r\n\theight: 100%;\r\n\tgrid-column: 2 / -1;\r\n\r\n\t@media (max-width: 720px) {\r\n\t\tgrid-row: 2 / -1;  \r\n\t\tgrid-column: 1 / 2;\r\n\t\tjustify-content: flex-start;\r\n\t\tpadding-left: 50px;\r\n\t}\r\n`;\r\n\r\nconst SvgStyles = {\r\n\tposition: \"absolute\",\r\n\tleft: \"15px\"\r\n};\r\n\r\nconst Select = styled.select`\r\n\twidth: 200px;\r\n\tpadding: 12px;\r\n\tbackground-color: ${({ theme: { darkMode: { elementsColor } } }) => elementsColor};\r\n\tborder-radius: 5px;\r\n\tfont-size: 15px;\r\n\tpadding-right: 50px;\r\n\tborder: none;\r\n\tcolor: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n`;\r\n\r\nfunction Form() {\r\n\t// zrobic custom hooka dla inputow, albo przynajmniej polaczyc to w jedno\r\n\tconst { countries, setFilteredCountries } = useContext(Context);\r\n\tconst [search, setSearch] = useState(() => '');\r\n\tconst [filter, setFilter] = useState(() => '');\r\n\r\n\t//input filter\r\n\tuseEffect(() => {\r\n\t\tsetFilteredCountries(\r\n\t\t\tcountries.filter(({ name }) => {\r\n\t\t\t\treturn name.toLowerCase().includes(search.toLowerCase());\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn () => {\r\n\t\t\tsetFilteredCountries(countries);\r\n\t\t};\r\n\t}, [countries, search]);\r\n\r\n\t// select filter\r\n\tuseEffect(() => {\r\n\t\tif (filter === \"\") return;\r\n\t\tsetFilteredCountries(\r\n\t\t\tcountries.filter(({ region }) => {\r\n\t\t\t\tif (filter === 'All Regions') return countries;\r\n\t\t\t\treturn region === filter;\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn () => {\r\n\t\t\tsetFilteredCountries(countries);\r\n\t\t};\r\n\t}, [countries, filter]);\r\n\r\n\treturn (\r\n\t\t<Section>\r\n\t\t\t<InputsForm>\r\n\t\t\t\t<svg style={SvgStyles} xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-search\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#ffffff\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n\t\t\t\t\t<path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n\t\t\t\t\t<circle cx=\"10\" cy=\"10\" r=\"7\" />\r\n\t\t\t\t\t<line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\r\n\t\t\t\t</svg>\r\n\t\t\t\t<Input type=\"text\" name=\"region\" value={search} onChange={e => setSearch(e.currentTarget.value)} placeholder=\"Search for a country...\" />\r\n\t\t\t</InputsForm>\r\n\t\t\t<InputsDropdownContainer>\r\n\t\t\t\t<Select name=\"select\" value={filter} onChange={e => setFilter(e.currentTarget.value)}>\r\n\t\t\t\t\t<option default>All Regions</option>\r\n\t\t\t\t\t<option>Africa</option>\r\n\t\t\t\t\t<option>Americas</option>\r\n\t\t\t\t\t<option>Asia</option>\r\n\t\t\t\t\t<option>Europe</option>\r\n\t\t\t\t\t<option>Oceania</option>\r\n\t\t\t\t</Select>\r\n\t\t\t</InputsDropdownContainer>\r\n\t\t</Section>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Roller } from 'react-awesome-spinners';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 50vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Wrapper>\r\n            <Roller />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Context } from '../../context/Context';\r\nimport Loader from '../Loader';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Main = styled.main`\r\n    padding: 0 50px;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    justify-content: center;\r\n    align-items: center;\r\n    grid-gap: 25px;\r\n    background-color: ${props => props.theme.darkMode.backgroundColor};\r\n`;\r\n\r\nconst CountryTemplate = styled.section`\r\n    max-height: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0;\r\n    padding: 0;\r\n\tmargin-bottom: 15px;\r\n\r\n\t@media(max-width: 720px) {\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n\twidth: 100%;\r\n    height: 30%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\toverflow: hidden;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nconst CountryInfo = styled.div`\r\n    height: 70%;\r\n    background-color: ${({ theme: { darkMode: { elementsColor } } }) => elementsColor};\r\n\r\n    color: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n    \r\n\tpadding: 30px 20px;\r\n\r\n    h3 {\r\n        font-size: 18px;\r\n\t\tfont-weight: 600;\r\n    }\r\n\tp {\r\n\t\tpadding-top: 10px;\r\n\t\tfont-weight: 600;\r\n\t\tspan {\r\n\t\t\tfont-weight: 300;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst linkStyles = {\r\n\ttextDecoration: \"none\"\r\n};\r\n\r\nfunction Grid({ numberWithCommas }) {\r\n\tconst { setCountries, filteredCountries } = useContext(Context);\r\n\tconst [loader, setLoader] = useState(true);\r\n\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n\t\t\tconst json = await response.json();\r\n\r\n\t\t\tsetCountries(json);\r\n\t\t\tsetLoader(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData();\r\n\t}, [])\r\n\r\n\r\n\tif (loader) return <Loader />;\r\n\treturn (\r\n\t\t<Main>\r\n\t\t\t{\r\n\t\t\t\tfilteredCountries.map(({ name, population, capital, region, flag }, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link style={linkStyles} to={`/${name}`} key={index}>\r\n\t\t\t\t\t\t\t<CountryTemplate>\r\n\t\t\t\t\t\t\t\t<ImageWrapper>\r\n\t\t\t\t\t\t\t\t\t<img src={flag} alt=\"country flag\" />\r\n\t\t\t\t\t\t\t\t</ImageWrapper>\r\n\t\t\t\t\t\t\t\t<CountryInfo>\r\n\t\t\t\t\t\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t\t\t\t\t\t<p>Population: <span>{numberWithCommas(population)}</span></p>\r\n\t\t\t\t\t\t\t\t\t<p>Region: <span>{region}</span></p>\r\n\t\t\t\t\t\t\t\t\t<p>Capital: <span>{capital}</span></p>\r\n\t\t\t\t\t\t\t\t</CountryInfo>\r\n\t\t\t\t\t\t\t</CountryTemplate>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</Main>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n\r\n//jutro: \r\n// poprawic grida i wyglad strony\r\n// filtrowanie przez nazwy regionow\r\n\r\n\r\n//  <CountryTemplate>\r\n//     <ImageWrapper>\r\n//         {/* <img src=\"http://placekitten.com/200/300\" alt=\"country flag\" /> */}\r\n//     </ImageWrapper>\r\n//     <CountryInfo>\r\n//         <h3>Germany</h3>\r\n//         <p>Population: 81,770,900</p>\r\n//         <strong>Region: Europe</strong>\r\n//         <strong>Capital: Berlin</strong>\r\n//     </CountryInfo>\r\n// </CountryTemplate> ","import React from 'react';\r\nimport Form from './main_components/Form';\r\nimport Grid from './main_components/Grid';\r\nconst numberWithCommas = x => {\r\n\treturn x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nfunction Main() {\r\n\t// const { darkMode, setDarkMode } = useContext(Context);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form />\r\n\t\t\t<Grid numberWithCommas={numberWithCommas} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Loader from '../components/Loader';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Main = styled.main`\r\n \twidth: 100%;\r\n  \theight: 50vh;\r\n  \tdisplay: flex;\r\n  \talign-items: center;\r\n\tjustify-content: center;\r\n\r\n\t@media (max-width: 880px) {\r\n\t\theight: 100vh;\r\n\t}\r\n`;\r\n\r\nconst BackButtonContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 130px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\r\n\tbutton {\r\n\t\twidth: 110px;\r\n\t\theight: 41px;\r\n\t\tfont-size: 15px;\r\n\t\tcolor: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n\t\tmargin-left: 50px;\r\n\t\tbackground-color: ${({ theme: { darkMode: { elementsColor } } }) => elementsColor};\r\n\t\tborder: none;\r\n\t\tborder-radius: 5px;\r\n\t\tcursor: pointer;\r\n\t\tborder: 3px solid #1e2b34;\r\n\t\tpadding-left: 25px;\r\n\t}\r\n`;\r\n\r\nconst svgStyles = {\r\n\tposition: \"absolute\",\r\n\ttop: \"50%\",\r\n\tbottom: \"50%\",\r\n\ttransform: \"translate(50%, -50%)\",\r\n\tleft: \"55px\"\r\n};\r\n\r\nconst ContentWrapper = styled.section`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpadding: 0 50px;\r\n\tdisplay: flex;\r\n\r\n\t@media (max-width: 880px) {\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n\r\nconst FlagWrapper = styled.div`\r\n\twidth: 50%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\toverflow: hidden;\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n  \t\theight: auto;\r\n \r\n\t\t/* height: 100%; */\r\n\t}\r\n\r\n\t@media (max-width: 880px) {\r\n\t\toverflow: visible;\r\n\t\twidth: 350px;\r\n\t};\r\n\r\n\t@media (max-width: 440px) {\r\n\t\twidth: 250px;\r\n\t};\r\n`;\r\n\r\nconst DetailsWrapper = styled.div`\r\n\tpadding: 30px 30px 30px 70px;\r\n\twidth: 50%;\r\n\theight: 100%;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(4, 1fr);\r\n\tgrid-template-rows: repeat(4, 1fr);\r\n\r\n\t@media (max-width: 1070px) {\r\n\t\twidth: 65%;\t\r\n\t};\r\n\r\n\t@media (max-width: 940px) {\r\n\t\twidth: 75%;\r\n\t}\r\n\t@media (max-width: 880px) {\r\n\t\twidth: 85%;\r\n\t\tpadding: 30px 0;\r\n\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t\tgrid-template-rows: repeat(6, 1fr);\r\n\r\n\t\theight: 500px;\r\n\t}\r\n\r\n\t@media (max-width: 350px) {\r\n\t\theight: 460px;\r\n\t}\r\n\t/* @media (max-width: 840px) {\r\n\t\twidth: 50%;\r\n\t} */\r\n`;\r\n\r\nconst AContainer = styled.ul`\r\n\tcolor: ${({ theme: { darkMode: { textColor } } }) => textColor}; \r\n\tgrid-column: 1 / 3;\r\n\tgrid-row: 1 / 4; \r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\t/* justify-content: space-evenly; */\r\n\r\n\t@media (max-width: 880px) {\r\n\t\tgrid-row: 1 / 3;\r\n\t\tgrid-column: 1 / 2;\r\n\t};\r\n\r\n\tli {\r\n\t\tpadding-bottom: 15px;\r\n\t\tfont-weight: 600;\r\n\r\n\t\th2 {\r\n\t\t\tpadding-top: 24px;\r\n\t\t\tfont-size: 20px;\r\n\t\t\tfont-weight: 800;\r\n\t\t}\r\n\t\th3 {\r\n\t\t\tfont-weight: 600;\r\n\t\t}\r\n\t\tspan {\r\n\t\t\tfont-weight: 300;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst BContainer = styled.ul`\r\n\tcolor: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n\tgrid-column: 3 / 5;\r\n\tgrid-row: 1 / 4;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding-top: 60px;\r\n\r\n\t@media (max-width: 880px) {\r\n\t\tgrid-row: 4 / 5;\r\n\t\tgrid-column: 1 / 2;\r\n\t};\r\n\r\n\tli { \r\n\t\tpadding-bottom: 10px;\r\n\t\tfont-weight: 600;\r\n\r\n\t\tspan {\r\n\t\t\tfont-weight: 300;\r\n\t\t}\r\n\t\tul {\r\n\t\t\tdisplay: flex;\r\n\t\t\tli {\r\n\t\t\t\tpadding-left: 10px;\r\n\t\t\t\tfont-weight: 300;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CContainer = styled.div`\r\n\tcolor: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n\tgrid-column: 1 / 5;\r\n\tgrid-row: 4 / 5;\r\n\t\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\t\r\n\t@media (max-width: 880px) {\r\n\t\tgrid-row: 5 / 6;\r\n\t\tgrid-column: 1 / 2;\r\n\t};\r\n\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t}\r\n`;\r\n\r\nconst numberWithCommas = x => {\r\n\treturn x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n// ta funkcje ewentualnie mozna popchnac od app \r\nfunction Details({ match }) {\r\n\tconst [countryDetails, setCountryDetails] = useState({});\r\n\tconst [loader, setLoader] = useState(true);\r\n\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`https://restcountries.eu/rest/v2/name/${match.params.name}`);\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetCountryDetails(data);\r\n\t\t\tsetLoader(false);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData();\r\n\t}, [])\r\n\r\n\t//tutaj mozna sie zastanowic czy Main ma byc wrapperem dla wszystkiego wlaczajac button czy button ma nie wchodzic w tresc Main\r\n\r\n\tif (loader) return <Loader />\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BackButtonContainer>\r\n\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t<svg style={svgStyles} xmlns=\"http://www.w3.org/2000/svg\" className=\"icon icon-tabler icon-tabler-arrow-narrow-left\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"hsl(0, 0%, 100%)\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n\t\t\t\t\t\t<path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n\t\t\t\t\t\t<line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n\t\t\t\t\t\t<line x1=\"5\" y1=\"12\" x2=\"9\" y2=\"16\" />\r\n\t\t\t\t\t\t<line x1=\"5\" y1=\"12\" x2=\"9\" y2=\"8\" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t\t<button>Back</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</BackButtonContainer>\r\n\t\t\t<Main>\r\n\t\t\t\t<ContentWrapper>\r\n\t\t\t\t\t<FlagWrapper>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcountryDetails.map(({ flag, name }, index) => {\r\n\t\t\t\t\t\t\t\treturn <img key={index} src={flag} alt={name} />\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</FlagWrapper>\r\n\t\t\t\t\t<DetailsWrapper>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcountryDetails.map(({ name, nativeName, population, region, subregion, capital }, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<AContainer key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<li><h2>{name}</h2></li>\r\n\t\t\t\t\t\t\t\t\t\t<li><h3>Native Name: {nativeName}</h3></li>\r\n\t\t\t\t\t\t\t\t\t\t<li>Population: <span>{numberWithCommas(population)}</span></li>\r\n\t\t\t\t\t\t\t\t\t\t<li>Region: <span>{region}</span></li>\r\n\t\t\t\t\t\t\t\t\t\t<li>Sub Region: <span>{subregion}</span></li>\r\n\t\t\t\t\t\t\t\t\t\t<li>Capital: <span>{capital}</span></li>\r\n\t\t\t\t\t\t\t\t\t</AContainer>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcountryDetails.map(({ alpha2Code, currencies, languages }, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<BContainer key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<li>Top Level Domain: <span>{alpha2Code}</span></li>\r\n\t\t\t\t\t\t\t\t\t\t<li>Currencies: <span>{currencies[0].name}</span></li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul>Languages:\r\n \t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlanguages.map(({ name }, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <li key={index}>{name} </li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</BContainer>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<CContainer>\r\n\t\t\t\t\t\t\t<ul>Border Countries:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcountryDetails.map(({ borders }) => {\r\n\t\t\t\t\t\t\t\t\t\treturn borders;\r\n\t\t\t\t\t\t\t\t\t}).map((element, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <li key={index}>{element}</li>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</CContainer>\r\n\t\t\t\t\t</DetailsWrapper>\r\n\t\t\t\t</ContentWrapper>\r\n\t\t\t</Main>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Details;\r\n\r\n\r\n\r\n\r\n\r\n// {\r\n// \tcountryDetails.map(({ nativeName, population, region, subregion, capital, alpha2Code, currencies, languages, borders }, index) => {\r\n// \t\treturn <DetailsWrapper style={{ color: \"white\" }} key={index}>\r\n// \t\t\t<h2>Native name: {nativeName}</h2>\r\n// \t\t\t<p>Population: {population}</p>\r\n// \t\t\t<p>Region: {region}</p>\r\n// \t\t\t<p>Sub Region: {subregion}</p>\r\n// \t\t\t<p>Capital: {capital}</p>\r\n// \t\t\t<BContainer>\r\n// \t\t\t\t<strong>Top Level Domain: {alpha2Code}</strong>\r\n// \t\t\t\t<p>Currencies: {currencies[0].name}</p>\r\n// \t\t\t\t<ul style={{ display: \"flex\", border: '1px solid white' }}>Languages:\r\n// \t\t\t\t{\r\n// \t\t\t\t\t\tlanguages.map(({ name }, index) => {\r\n// \t\t\t\t\t\t\treturn <li key={index}>{name}</li>\r\n// \t\t\t\t\t\t})\r\n// \t\t\t\t\t}\r\n// \t\t\t\t</ul>\r\n// \t\t\t</BContainer>\r\n// \t\t\t<CContainer>\r\n// \t\t\t\t{\r\n// \t\t\t\t\tborders.map((element, index) => {\r\n// \t\t\t\t\t\treturn <li key={index}>{element}</li>\r\n// \t\t\t\t\t})\r\n// \t\t\t\t}\r\n// \t\t\t</CContainer>\r\n// \t\t</DetailsWrapper>\r\n// \t})\r\n// }\r\n\r\n","export const Variables = {\r\n    darkMode:  {\r\n        elementsColor: \"hsl(209, 23%, 22%)\",\r\n        backgroundColor: \"hsl(207, 26%, 17%)\",\r\n        textColor: \"hsl(0, 0%, 100%)\"\r\n    },\r\n    lightMode: {\r\n        textColor: \"hsl(200, 15%, 8%)\",\r\n        inputColor: \"hsl(0, 0%, 52%)\",\r\n        backgroundColor: \"hsl(0, 0%, 98%)\",\r\n        elementsColor: \"hsl(0, 0%, 100%)\"\r\n    }\r\n};","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    width: 100%;\r\n    height: 75px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: ${({ theme: { darkMode: { elementsColor } } }) => elementsColor};\r\n`;\r\n\r\nconst Header__title_container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 50%;  \r\n    height: 100%;\r\n    justify-content: flex-start;\r\n    \r\n    h1 {  \r\n        margin-left: 50px;\r\n        font-weight: 800;\r\n        font-size: 22px;\r\n        color: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n    }\r\n`;\r\n\r\nconst Header__switch_container = styled(Header__title_container)`\r\n    justify-content: flex-end;\r\n\r\n    button {\r\n        margin-right: 50px;\r\n        border: none;\r\n        background-color: ${({ theme: { darkMode: { elementsColor } } }) => elementsColor};\r\n        color: ${({ theme: { darkMode: { textColor } } }) => textColor};\r\n        font-weight: 600;\r\n        font-size: 1.0625rem;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nfunction MainHeader() {\r\n    \r\n    return (\r\n        <Header>\r\n            <Header__title_container>\r\n                <h1>Where in the world?</h1>\r\n            </Header__title_container>\r\n            <Header__switch_container>\r\n                <button>Light mode</button>\r\n            </Header__switch_container>\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useState, createContext } from 'react';\nimport Main from './components/Main';\nimport Details from './components/Details';\nimport { Context } from './context/Context';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Variables } from './theme/Variables';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Header from './components/main_components/Header';\n\n\n// tutaj cos mozna pokombinowac z tym min-heightem, zeby w details nie pokazywal sie scroll\nconst Wrapper = styled.div`\n    min-height: 100vh;\n    background-color: ${props => props.theme.darkMode.backgroundColor};\n    overflow: hidden;\n\n    @media (max-width: 530px) {\n      font-size: 13px;\n    }\n`;\n\nfunction App() {\n  // const [darkMode, setDarkMode] = useState(true);\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n\n  return (\n    <Router>\n      <ThemeProvider theme={Variables}>\n        <Header />\n        <Switch>\n          <Wrapper>\n            <Context.Provider value={{ countries, setCountries, filteredCountries, setFilteredCountries }}>\n              <Route exact path=\"/\" component={Main} />\n              <Route path=\"/:name\" component={Details} />\n            </Context.Provider>\n          </Wrapper>\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst Reset = createGlobalStyle`\r\n/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    table, caption, tbody, tfoot, thead, tr, th, td,\r\n    article, aside, canvas, details, embed, \r\n    figure, figcaption, footer, header, hgroup, \r\n    menu, nav, output, ruby, section, summary,\r\n    time, mark, audio, video {\r\n    \tmargin: 0;\r\n    \tpadding: 0;\r\n    \tborder: 0;\r\n    \tfont-size: 100%;\r\n    \tfont: inherit;\r\n    \tvertical-align: baseline;\r\n    }\r\n    /* HTML5 display-role reset for older browsers */\r\n    article, aside, details, figcaption, figure, \r\n    footer, header, hgroup, menu, nav, section {\r\n    \tdisplay: block;\r\n    }\r\n    body {\r\n    \tline-height: 1;\r\n    }\r\n    ol, ul {\r\n    \tlist-style: none;\r\n    }\r\n    blockquote, q {\r\n    \tquotes: none;\r\n    }\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n    \tcontent: '';\r\n    \tcontent: none;\r\n    }\r\n    table {\r\n    \tborder-collapse: collapse;\r\n    \tborder-spacing: 0;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html,\r\n    body {\r\n        font-size: 16px;\r\n        font-family: 'Nunito Sans', sans-serif;\r\n    }\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        box-sizing: border-box;\r\n        outline-color: #BFBFBF;\r\n    }\r\n`;\r\n\r\nexport default Reset;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Reset from './theme/Reset';\n\nReactDOM.render(\n  <React.StrictMode>\n    <>\n      <Reset />\n      <App />\n    </>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}